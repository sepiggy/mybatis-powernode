<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bjpowernode.dao.StudentDao">

    <!--查询一个学生Student
        <select>: 表示查询操作， 里面是select语句
        id: 要执行的sql语句的唯一标识， 是一个自定义字符串。
            推荐使用dao接口中的方法名称
        resultType:告诉mybatis，执行sql语句，把数据赋值给哪个类型的java对象。
              resultType的值现在使用的java对象的全限定名称
        #{studentId}: 占位符， 表示从java程序中传入过来的数据
    -->
    <select id="selectStudentById" resultType="com.bjpowernode.domain.Student">
         select id,name,email,age from student where id = #{studentId}
    </select>

    <!--添加insert
       eg. insert into student values(1003,"李峰","lifeng@qq.com",26)
       如果传入给mybatis是一个java对象，使用#{属性名} 获取此属性的值。
       属性值放到 #{}占位符的位置, mybatis执行此属性对应的getXXX().
       例如 #{id} ，执行getId();
    -->
    <insert id="insertStudent">
       insert into student values(#{id},#{name},#{email},#{age})
    </insert>
</mapper>

<!--
  Mapper文件小结：
  1.约束文件
    http://mybatis.org/dtd/mybatis-3-mapper.dtd
    约束文件作用： 定义和限制当前文件中可以使用的标签和属性，以及标签出现的顺序。

  2.mapper: 根标签
    namespace: 命名空间，必须有值，不能为空。唯一值。推荐使用Dao接口的全限定名称。作用: 参与识别sql语句的作用。

  3.在mapper里面可以写 <insert>,<update>,<delete>,<select>等标签。
    <insert>里面是 insert语句，表示执行的insert操作
    <update>里面是 update语句
    <delete>里面是 delete语句
    <select> 里面是 select语句
-->