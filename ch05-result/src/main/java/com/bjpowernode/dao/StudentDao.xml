<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.dao.StudentDao">
    <!-- 使用insert, update,delete,select标签写sql -->

    <!--
       resultType: 1 java类型全限定名称； 2 别名
       resultType: 表示mybatis执行sql后得到java对象类型。
                   规则同名列赋值给同名属性。
    -->
    <select id="selectById"   resultType="com.bjpowernode.domain.Student">
        select id,name,email,age from student where id=#{studentId}
    </select>


    <!--select id="selectById2" resultType="com.bjpowernode.vo.CustomObject">
         select id,name,email,age from student where id=#{stuid}
    </select>-->



    <!--
      执行sql语句，得到是一个值（一行一列）
    -->
    <select id="countStudent" resultType="java.lang.Long">
        select count(*) from student
    </select>

    <!--
       执行sql得到一个Map结构数据， mybatis执行sql，把ResultSet转为map
       sql执行结果， 列名做map的key ， 列值作为value
       sql执行得到是一行记录，转为map结构是正确的。

       dao接口返回是一个map， sql语句最多能获取一行记录，多余一行是错误

    -->
    <select id="selectMap" resultType="java.util.HashMap">
        select id,name,email from student where id != #{stuid}
    </select>


    <!--使用resultMap定义列和属性的关系-->
    <!--定义resultMap
        id:给resultMap的映射关系起个名称，唯一值
        type:java类型的全限定名称
    -->
    <resultMap id="customMap" type="com.bjpowernode.vo.CustomObject">

        <!--定义列名和属性名的对应-->
        <!--主键类型使用id标签-->
        <id column="id" property="cid" />
        <!--非主键类型使用result标签-->
        <result column="name" property="cname" />
        <!--列名和属性名相同不用定义-->
        <result column="email" property="email" />
        <result column="age" property="age" />
    </resultMap>

    <!--使用resultMap属性，指定映射关系的id
        resultMap和resultType 不能同时使用， 二选一。
    -->
    <select id="selectById2" resultMap="customMap">
      select id,name,email,age from student where id=#{stuid}
    </select>


    <!--使用列别名，解决列名和属性名不同的问题-->
    <select id="selectById3" resultType="com.bjpowernode.vo.CustomObject">
        select id as cid,name  cname,email,age from student where id=#{stuid}
    </select>

    <!--like第一种方式-->
    <select id="selectLikeOne" resultType="com.bjpowernode.domain.Student">
        select * from student where name like #{name}
    </select>

    <!--like第二种方式-->
    <select id="selectLikeTwo" resultType="com.bjpowernode.domain.Student">
        select * from student where name like "%" #{name} "%"
    </select>
</mapper>